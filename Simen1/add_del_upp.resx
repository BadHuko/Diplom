<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>